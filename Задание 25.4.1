import requests

def test_get_pets():
    """
    Тестовый случай для получения списка всех питомцев

    Шаги:
    1. Отправить GET-запрос к эндпоинту '/api/pets'.
    2. Проверить, что код состояния ответа равен 200, что указывает на успешный запрос.
    """
    url = "https://petfriends.skillfactory.ru/api/pets"
    response = requests.get(url)
    assert response.status_code == 200, "Ошибка при получении списка питомцев"

def test_create_pet():
    """
    Тестовый случай для создания нового питомца

    Шаги:
    1. Отправить POST-запрос к эндпоинту '/api/my_pets' с необходимыми данными.
    2. Проверить, что код состояния ответа равен 200, что указывает на успешное создание питомца.
    """
    url = "https://petfriends.skillfactory.ru/api/my_pets"
    data = {
        "name": "Мурзик",
        "age": 3,
        "breed": "домашний кот"
    }
    response = requests.post(url, json=data)
    assert response.status_code == 200, "Ошибка при создании питомца"

def test_update_pet():
    """
    Тестовый случай для обновления информации о питомце

    Шаги:
    1. Отправить PUT-запрос к эндпоинту '/api/my_pets/{pet_id}' с обновленными данными.
    2. Проверить, что код состояния ответа равен 200, что указывает на успешное обновление информации о питомце.
    """
    pet_id = 1
    url = f"https://petfriends.skillfactory.ru/api/my_pets/{pet_id}"
    data = {
        "name": "Новое имя",
        "age": 4,
        "breed": "новая порода"
    }
    response = requests.put(url, json=data)
    assert response.status_code == 200, "Ошибка при обновлении информации о питомце"

def test_delete_pet():
    """
    Тестовый случай для удаления питомца

    Шаги:
    1. Отправить DELETE-запрос к эндпоинту '/api/my_pets/{pet_id}' для удаления питомца.
    2. Проверить, что код состояния ответа равен 200, что указывает на успешное удаление питомца.
    """
    pet_id = 1
    url = f"https://petfriends.skillfactory.ru/api/my_pets/{pet_id}"
    response = requests.delete(url)
    assert response.status_code == 200, "Ошибка при удалении питомца"

def test_get_pet():
    """
    Тестовый случай для получения информации о питомце

    Шаги:
    1. Отправить GET-запрос к эндпоинту '/api/pets/{pet_id}' для получения информации о конкретном питомце.
    2. Проверить, что код состояния ответа равен 200, что указывает на успешное получение информации о питомце.
    """
    pet_id = 1
    url = f"https://petfriends.skillfactory.ru/api/pets/{pet_id}"
    response = requests.get(url)
    assert response.status_code == 200, "Ошибка при получении информации о питомце"

def run_tests():
    """
    Запуск всех тестов
    """
    test_get_pets()
    test_create_pet()
    test_update_pet()
    test_delete_pet()
    test_get_pet()

run_tests()
